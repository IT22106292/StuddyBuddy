// Firebase Storage Security Rules
// Copy these rules to your Firebase Console > Storage > Rules

rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
             get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /resources/{fileName} {
      // Allow anyone to read files
      allow read: if true;

      // Allow upload (write) if the user is authenticated
      allow write: if request.auth != null;

      // Allow delete if user is authenticated AND (is the uploader OR is admin)
      // Check both customMetadata and metadata fields for uploadedBy
      allow delete: if request.auth != null && (
        (resource.metadata.uploadedBy == request.auth.uid) ||
        (resource.metadata.customMetadata.uploadedBy == request.auth.uid) ||
        isAdmin()
      );
    }
    
    // Allow users to read their own profile images
    match /profile-images/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow delete: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }
    
    // Default rule - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}